# @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2/EStore/config/atg/userprofiling/ProfileFormHandler.properties#1 $$Change: 788278 $
# $Revision: #1 $
$class=atg.projects.store.profile.StoreProfileFormHandler
$scope=request

# Template to use for change password email
templateEmailInfo=/atg/store/email/PasswordUpdatedEmailInfo

# Template email sender
templateEmailSender=/atg/userprofiling/email/TemplateEmailSender

# The reference to the session-scope Profile for the user
profile=Profile

# The reference to the session-scope User and global userAuthority
user=/atg/dynamo/security/User
userLoginManager=/atg/dynamo/security/UserLoginManager

# A service which provides helper methods for dealing with profiles
profileTools=ProfileTools

createProfileType^=ProfileTools.defaultProfileType
logoutProfileType^=ProfileTools.defaultProfileType
loginProfileType^=ProfileTools.defaultProfileType

# If this is true, when the logout operation completes, the current session is expired.
# Default is true
#expireSessionOnLogout=false

#Names of properties to trim whitspace from
trimProperties=login,email

requestLocale=/atg/dynamo/servlet/RequestLocale

# The reference to the globally scoped ProfileUpdateTrigger component
profileUpdateListeners=ProfileUpdateTrigger

# If this is true, then ProfileUpdateEvents will be sent when a profile is updated
# Default is false
#generateProfileUpdateEvents=true

# The following properties are from GenericFormHandler and they relate to FormSubmission message/event
sendMessages=false
messageSource=/atg/dynamo/messaging/DynamoMessageSource
messageType=atg.das.FormSubmission
messagePort=FormSubmission

# set clearValuesOnUpdate to true if you want form data to be cleared after update is completed.
clearValuesOnUpdate=false

# set clearValuesOnCreate to true if you want form data to be cleared after create is completed.
clearValuesOnCreate=true

# set clearValuesOnLogin to true if you want form data to be cleared after login is completed.
clearValuesOnLogin=true

# The ProfileRequestServlet which is used by the ProfileFormHandler
profileRequestServlet=/atg/userprofiling/ProfileRequestServlet

# The number of milliseconds to delay after a bad password is submitted.  This delay helps deter
# brute force password-guessing attacks.  Default is 1000 (1 second).
#badPasswordDelay=1000

expireSessionOnLogout=true

# A pointer to the scenario manager component
scenarioManager=/atg/scenario/ScenarioManager

# This ensures that the values of the "scenarioInstances" and the
# "slotInstances" profile property are copied over from the transient
# user to the authenticated user on login, thus allowing scenarios
# and slots to be continued across the login boundary.
propertiesToAddOnLogin+=scenarioInstances,slotInstances

# Should the first saved order be merged to the current order
mergeOrders=true

# All the properties of an Address
addressProperties=firstName,middleName,lastName,address1,address2,city,state,postalCode,country,phoneNumber,ownerId
addressPropertyList=firstName,lastName,address1,address2,city,state,postalCode,phoneNumber,country

# Required billing address properties
requiredBillingAddressPropertyList=firstName,lastName,address1,city,postalCode,phoneNumber,country

# Properties to set when adding a new billing address on the credit card
billingAddressPropertyList=firstName,lastName,address1,address2,city,state,postalCode,phoneNumber,country

userItems=/atg/store/profile/UserItems

sessionBean=/atg/store/profile/SessionBean
giftlistManager=/atg/commerce/gifts/GiftlistManager

# the shipping group map container
shippingGroupMapContainer=/atg/commerce/order/purchase/ShippingGroupContainerService

# Credit card tools service
creditCardTools=/atg/commerce/payment/ExtendableCreditCardTools

# Checkout progress states
checkoutProgressStates=/atg/store/states/CheckoutProgressStates
