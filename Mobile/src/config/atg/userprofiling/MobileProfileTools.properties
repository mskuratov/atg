# @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2/Mobile/config/atg/userprofiling/MobileProfileTools.properties#1 $$Change: 735822 $
$class=atg.projects.store.mobile.userprofiling.MobileStoreProfileTools

# Access to the repository
profileRepository=ProfileAdapterRepository

defaultProfileType=user

# Service which is used to encode/decode profile cookies.
cookieManager=CookieManager

# Service which deals with well known properties
propertyManager=PropertyManager

commercePropertyManager=PropertyManager

# Service responsible for finding profile repository items
profileItemFinder=ProfileItemFinder

# Service which deals with sending profile sensor events
profileEventTrigger=ProfileEventTrigger

# Group registry for this profile repository
groupContainer=/atg/registry/RepositoryGroups

# User directory for profiles
repositoryUserDirectory=ProfileUserDirectory

# the Profile has to be registered with the security system...
loginUserAuthority=ProfileUserAuthority

userLoginManager=/atg/dynamo/security/UserLoginManager

# Reference to the Password generator
passwordGenerator=/atg/userprofiling/PasswordGenerator

# Reference to the password rule checker
passwordRuleChecker=/atg/userprofiling/passwordchecker/PasswordRuleChecker

# Reference to the PreviousNPasswordManager
previousNPasswordManager=/atg/userprofiling/passwordchecker/PreviousNPasswordManager

# Reference to the Illegal password checker
illegalPasswordChecker=/atg/userprofiling/passwordchecker/IllegalPasswordChecker

orderManager=/atg/commerce/order/OrderManager
pricingTools=/atg/commerce/pricing/PricingTools
localeService=/atg/userprofiling/LocaleService
siteGroupManager=/atg/multisite/SiteGroupManager

profilePath^=ProfileRequestServlet.profilePath
shoppingCartPath=/atg/commerce/ShoppingCart
userPricingModelsPath=/atg/commerce/pricing/UserPricingModels

# Should the first saved order be merged to the current order
mergeOrders=true

# Should the first saved order be made the current order
makeFirstOrderCurrentOnLoad=true

# sorting info for loading orders
sortOrdersByProperty=lastModifiedDate
ascendingOrder=false

# for repricing saved shopping cart after login
useRequestLocale=true
defaultLocale^=/atg/commerce/pricing/PricingTools.defaultLocale
repriceOrderOnLogin=true

orderItemDescriptorName=order
profileIdPropertyName=profileId

emptyAddressPropertyNames=\
  firstName,\
  lastName,\
  address1,\
  address2,\
  address3,\
  city,\
  state,\
  postalCode,\
  county,\
  country

#
# Used to handle active promotions
#
promotionTools=/atg/commerce/promotion/PromotionTools

# The TransactionLockFactory
transactionLockFactory=/atg/commerce/util/TransactionLockFactory

#This property is added to generate a unique nickname for the address map and credit cards.
#If there is any duplicate name found, then the nickname is appended with separator and numeric number
uniqueNicknameSeparator=##

## This property is added to get all available addresses from User Profile. This property includes all map type of
## addresses that has to be included in the list of all available addresses.
shippingAddressMapProperties=secondaryAddresses

##This intended for any future use
billingAddressMapProperties=

# CRS properties

# Password Length
minPasswordLength=5
maxPasswordLength=10

placeUtils=/atg/commerce/util/PlaceUtils

# These are the j2ee app servlet contexts for the main commerce site and an
# alternate site. These values are used in the shopping cart to determine
# what type of order we need for the requested url.
urlContextStoreCommerce=/@default_context_root@

# If set to true will return the order that was last modified in the list of 
# open orders for the user.  If it is set to false, the behavior of selecting 
# the first non-explicitly saved order is used instead.
# The default is set to true.
selectLastModifiedOrder=false;

# Regular expression to validate emailAddress
emailFormat=^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$

storeConfiguration=/atg/store/StoreConfiguration

# cipher
cipher=/atg/store/security/crypto/CreditCardCipher
