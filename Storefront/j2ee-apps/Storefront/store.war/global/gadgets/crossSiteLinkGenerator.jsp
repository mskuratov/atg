<%--
  This gadget generates cross site links and creates a request scoped parameter 'siteLinkUrl'.

  Required Parameters
    None

  Optional Parameters
    product
      The product item for which cross site URL is generated. It is used to get product template if
      'customUrl' parameter is not specified and best matching site ID if 'siteId' parameter is
      not specified.
    customUrl
      The custom URL to be wrapped into site-specific details. Can be used in order to customize
      specific URL via SiteLinkDroplet (e.g. in SEO case when not producte's template is used
      but the URL generated by CatalogItemLink droplet).
    queryParams
      query parameters to include into URL.
    siteId
      The site ID to generate link for. If not specified, product site ID will be used.
    forceFullSite
      If this parameter is specified (no matter what the value is), then a "full CRS" site ID
      must be used, irrespective of the actual site. This is needed to force a "full CRS" site link
      generation regardless of the actual site (which is identified by "siteId" parameter).
      For example, when the "CRS mobile" module is installed, the "siteId", the current site might be
      a mobile one and in some cases we need a non-mobile (full CRS) site links to be generated.
      One of such cases: generation of emails with links to products and sites, where links
      should point to "full CRS" site and then the "MobileDetectionInterceptor" component
      will handle redirection to mobile site, when a request is originated by mobile user agent.
      To force get a "full CRS" site when the "CRS mobile" module is installed, we use site groups
      with "crs.MobileSitePairs" shareable type introduced by mobile version of "sites.xml" files:
      each site group with the "crs.MobileSitePairs" shareable type joins together a "full CRS"
      and corresponding mobile site (in other words, we get a "non-mobile - mobile" site pairs).
      More technical details are available in "PairedSiteDroplet" component.
      Also NOTE a site is identified as "full CRS" when it has the "channel" property equal to "desktop"
      (the "channel" property is defined in "sites.xml" files).
      When a site "channel" property equals to "desktop", the "forceFullSite" parameter is ignored
      (i.e. we already perform a request to "full CRS" site).
--%>
<dsp:page>
  <%-- Import Required Beans --%>
  <dsp:importbean bean="/atg/dynamo/droplet/multisite/GetSiteDroplet"/>
  <dsp:importbean bean="/atg/dynamo/droplet/multisite/PairedSiteDroplet"/>
  <dsp:importbean bean="/atg/dynamo/droplet/multisite/SiteLinkDroplet"/>
  <dsp:importbean bean="/atg/commerce/multisite/SiteIdForCatalogItem"/>

  <dsp:getvalueof var="product" param="product"/>
  <dsp:getvalueof var="siteId" param="siteId"/>
  <dsp:getvalueof var="customUrl" param="customUrl"/>
  <dsp:getvalueof var="queryParams" param="queryParams"/>
  <dsp:getvalueof var="forceFullSite" param="forceFullSite"/>

  <%-- Determine the URL to update --%>
  <c:choose>
    <c:when test="${empty customUrl && empty product}">
      <dsp:getvalueof var="urlToUpdate" value=""/>
    </c:when>
    <c:when test="${empty customUrl && !empty product}">
      <dsp:getvalueof var="urlToUpdate" param="product.template.url"/>
    </c:when>
    <c:otherwise>  
      <dsp:getvalueof var="urlToUpdate" value="${customUrl}"/>
    </c:otherwise>
  </c:choose>

  <%-- If we have no siteId passed in determine the siteId from the product --%>
  <c:if test="${empty siteId && !empty product}">
    <%--
      "SiteIdForCatalogItem" droplet returns the most appropriate site ID a given repository item.

      Input Parameters:
        item
          The item that the site selection is going to be based on.

      Open Parameters:
        output
          Rendered if no errors occur.

      Output Parameters:
        siteId
          The calculated siteId, which represents the best match for the given item.
    --%>
    <dsp:droplet name="SiteIdForCatalogItem" item="${product}" var="siteIdForCatalogItem">
      <dsp:oparam name="output">
        <dsp:getvalueof var="siteId" value="${siteIdForCatalogItem.siteId}"/>
      </dsp:oparam>
    </dsp:droplet>
  </c:if>

  <c:if test="${!empty forceFullSite && !empty siteId}">
    <dsp:droplet name="GetSiteDroplet">
      <dsp:param name="siteId" value="${siteId}"/>
      <dsp:oparam name="output">
        <dsp:getvalueof var="site" param="site"/>
        <c:if test="${site.channel != 'desktop'}">
          <%--
            "PairedSiteDroplet" gets a paired site ID for given site.

            Input Parameters:
              siteId
                The site to get a paired site for.

            Open Parameters:
              output
                Rendered if no errors occur.

            Output Parameters:
              pairedSiteId
                Paired site ID.
          --%>
          <dsp:droplet name="PairedSiteDroplet" siteId="${siteId}">
            <dsp:oparam name="output">
              <dsp:getvalueof var="siteId" param="pairedSiteId"/>
            </dsp:oparam>
          </dsp:droplet>
        </c:if>
      </dsp:oparam>
    </dsp:droplet>
  </c:if>

  <%--
    "SiteLinkDroplet" gets the URL for a particular site.

    Input Parameters:
      siteId
        The site to render the site link for.
      path
        An optional path string that will be included in the returned URL.
      queryParams
        Optional URL parameters.

    Open Parameters:
      output
        Rendered if no errors occur.

    Output Parameters:
      url
        The url for the site.
  --%>
  <dsp:droplet name="SiteLinkDroplet" siteId="${siteId}" path="${urlToUpdate}"
               queryParams="${queryParams}" var="siteLink">
    <dsp:oparam name="output">
      <dsp:getvalueof var="siteLinkUrl" value="${siteLink.url}" scope="request"/>
    </dsp:oparam>
  </dsp:droplet>
</dsp:page>
<%-- @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2/Storefront/j2ee/store.war/global/gadgets/crossSiteLinkGenerator.jsp#2 $$Change: 742374 $--%>
