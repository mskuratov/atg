<%-- 
This page fragment generates a series of dsp:option tags, one for each
country we want to let the user select as part of shipping address.  
--%>

<%-- Iterate over the master list of countries and generate an option tag filtered on the basis of store configuration--%>

<dsp:droplet name="${countryRestrictionDroplet}">
  <dsp:param name="userLocale" value="${requestLocale.locale}" />
  <dsp:oparam name="output">
    <dsp:getvalueof var="countries" vartype="java.lang.Object" param="countries"/>
    <c:forEach var="country" items="${countries}">
      <dsp:param name="country" value="${country}"/>
      <dsp:option paramvalue="country.code"><dsp:valueof param="country.displayName"/></dsp:option>
    </c:forEach>

    <c:if test="${not empty countries}">
      <script type="text/javascript">
        var selstateText = '<fmt:message key="common.selectState"/>';
        var postState = '';        
        var state = '';
      <c:set var="numOfCountries" value="${fn:length(countries)}"/>
      <c:forEach var="country" items="${countries}" varStatus="countryStatus">
        <dsp:param name="country" value="${country}"/>
        <dsp:droplet name="/atg/commerce/util/StateListDroplet">
          <dsp:param name="countryCode" param="country.code"/>
          <dsp:oparam name="output">
            <dsp:getvalueof var="states" param="states"/>
            <%-- Check if selected country have states --%>
            <c:set var="numOfStates" value="${fn:length(states)}"/>
            <c:if test="${numOfStates > 0}">
              <c:forEach var="state" items="${states}">                
                <dsp:param name="state" value="${state}"/>
                <dsp:getvalueof var="stateDisplayName" param="state.displayName"/>
                state = state+'<dsp:valueof param="country.code"/>:<dsp:valueof param="state.code"/>:${stateDisplayName}|';
              </c:forEach>
              <%-- Add delimiter between states from different countries --%>
              <c:if test="${countryStatus.count < numOfCountries}">
                state = state+':delim:<fmt:message key="common.listDelimeter"/>|';              
              </c:if>
            </c:if>
          </dsp:oparam>
        </dsp:droplet>
      </c:forEach>
      //end state string
        function TrimString(sInString) {
          if ( sInString ) {
            sInString = sInString.replace( /^\s+/g, "" );// strip leading
            return sInString.replace( /\s+$/g, "" );// strip trailing
          }
        }

        function populateState(countryObj) {

          displayMandatoryState(countryObj.value);
          var selObj = document.getElementById("<dsp:valueof value="${statePicker}" />");
          var selectedIndex = selObj.selectedIndex;
          var postState = '';          
          if (selectedIndex != -1){
            postState = selObj.options[selObj.selectedIndex].value;
          }          
          var foundState = false;
          //alert(state);
          //alert('selObj' + eval(selObj));
          //alert('selObj.type:' + selObj.type);
          // Empty options just in case new drop down is shorter
          if (selObj.type == 'select-one' ) {
            //alert('true');
            //alert('selObj.options.length"' + selObj.options.length);
            for (var i = 0; i < selObj.options.length; i++) {
              selObj.options[i] = null;
            }
            selObj.options.length=null;
            selObj.options[0] = new Option(selstateText,'');
            selObj.selectedIndex = 0;
          }
          // Populate the drop down with states from the selected country
          var stateLineArray = state.split("|");  // Split into lines
          var optionCntr = 1;
        //alert('stateLineArray.length:' + stateLineArray.length);
          for (var loop = 0; loop < stateLineArray.length; loop++) {
            lineArray = stateLineArray[loop].split(":");
            countryCode  = TrimString(lineArray[0]);
            stateCode    = TrimString(lineArray[1]);
            stateName    = TrimString(lineArray[2]);
            //alert('countryCode:'+ countryCode + ';stateCode:' + stateCode + ';stateName:'+stateName);
            if (countryObj.value == countryCode && countryCode != '' || countryObj.value == '') {
              if ( stateCode != undefined && stateCode != '' ) {
                selObj.options[optionCntr] = new Option(stateName, stateCode);
              }
              // See if it's selected from a previous post
              if ( stateCode == postState) {
                selObj.selectedIndex = optionCntr;
              }
              foundState = true;
              optionCntr++;
            }
          }
        }

        function displayMandatoryState(country) {
         var countryList = new Array();
          var displayMandatory='false';
          <c:set var="counterloop" value="0" />
                   <dsp:getvalueof var="mandatoryStateCountryList" bean="/atg/store/StoreConfiguration.mandatoryStateCountryList"/>
                  <c:forEach var="mandatoryStateCountry" items="${mandatoryStateCountryList}">
                    <dsp:param name="list" value="${mandatoryStateCountry}"/>
                    countryList[${counterloop}]='<dsp:valueof param="list"/>';
                    <c:set var="counterloop" value="${counterloop+1}" />
                  </c:forEach>
  
          for(var count=0; count<countryList.length;count++) {
            //alert(TrimString(country)==TrimString(countryList[count]));
            if(TrimString(country)==TrimString(countryList[count])) {
              displayMandatory='true';
              break;
            }
          }

        }
        displayMandatoryState('<dsp:valueof bean="${countryCode}"/>');                        
      </script>
    </c:if>
  </dsp:oparam>
</dsp:droplet>
<%-- @version $Id: //hosting-blueprint/B2CBlueprint/version/10.2/Storefront/j2ee/store.war/global/util/countryListPicker.jspf#1 $$Change: 735822 $--%>
